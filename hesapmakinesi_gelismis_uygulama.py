# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'hesapmakinesi_gelismis.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import math
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setEnabled(True)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.giris = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(16)
        self.giris.setFont(font)
        self.giris.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.giris.setObjectName("giris")
        self.gridLayout.addWidget(self.giris, 0, 0, 1, 1)
        self.sonuc_ekrani = QtWidgets.QTextEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.sonuc_ekrani.setFont(font)
        self.sonuc_ekrani.setReadOnly(True)
        self.sonuc_ekrani.setObjectName("sonuc_ekrani")
        self.gridLayout.addWidget(self.sonuc_ekrani, 1, 0, 1, 1)
        self.buton_alani = QtWidgets.QWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(16)
        self.buton_alani.setFont(font)
        self.buton_alani.setObjectName("buton_alani")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.buton_alani)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.btn_plus = QtWidgets.QPushButton(self.buton_alani)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btn_plus.setFont(font)
        self.btn_plus.setObjectName("btn_plus")
        self.gridLayout_3.addWidget(self.btn_plus, 1, 3, 1, 1)
        self.btn_multiply = QtWidgets.QPushButton(self.buton_alani)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btn_multiply.setFont(font)
        self.btn_multiply.setObjectName("btn_multiply")
        self.gridLayout_3.addWidget(self.btn_multiply, 3, 3, 1, 1)
        self.btn_3 = QtWidgets.QPushButton(self.buton_alani)
        self.btn_3.setStyleSheet("color: red;")
        self.btn_3.setObjectName("btn_3")
        self.gridLayout_3.addWidget(self.btn_3, 1, 2, 1, 1)
        self.btn_6 = QtWidgets.QPushButton(self.buton_alani)
        self.btn_6.setStyleSheet("color: red;")
        self.btn_6.setObjectName("btn_6")
        self.gridLayout_3.addWidget(self.btn_6, 2, 2, 1, 1)
        self.btn_minus = QtWidgets.QPushButton(self.buton_alani)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btn_minus.setFont(font)
        self.btn_minus.setObjectName("btn_minus")
        self.gridLayout_3.addWidget(self.btn_minus, 2, 3, 1, 1)
        self.btn_divide = QtWidgets.QPushButton(self.buton_alani)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btn_divide.setFont(font)
        self.btn_divide.setObjectName("btn_divide")
        self.gridLayout_3.addWidget(self.btn_divide, 4, 3, 1, 1)
        self.btn_9 = QtWidgets.QPushButton(self.buton_alani)
        self.btn_9.setStyleSheet("color: red;")
        self.btn_9.setObjectName("btn_9")
        self.gridLayout_3.addWidget(self.btn_9, 3, 2, 1, 1)
        self.btn_equals = QtWidgets.QPushButton(self.buton_alani)
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_equals.setFont(font)
        self.btn_equals.setStyleSheet("color: red;")
        self.btn_equals.setObjectName("btn_equals")
        self.gridLayout_3.addWidget(self.btn_equals, 4, 2, 1, 1)
        self.btn_2 = QtWidgets.QPushButton(self.buton_alani)
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.btn_2.setFont(font)
        self.btn_2.setStyleSheet("color: red;")
        self.btn_2.setObjectName("btn_2")
        self.gridLayout_3.addWidget(self.btn_2, 1, 1, 1, 1)
        self.btn_1 = QtWidgets.QPushButton(self.buton_alani)
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.btn_1.setFont(font)
        self.btn_1.setAutoFillBackground(False)
        self.btn_1.setStyleSheet("color: red;")
        self.btn_1.setObjectName("btn_1")
        self.gridLayout_3.addWidget(self.btn_1, 1, 0, 1, 1)
        self.btn_0 = QtWidgets.QPushButton(self.buton_alani)
        self.btn_0.setStyleSheet("color: red;")
        self.btn_0.setObjectName("btn_0")
        self.gridLayout_3.addWidget(self.btn_0, 4, 0, 1, 1)
        self.btn_7 = QtWidgets.QPushButton(self.buton_alani)
        self.btn_7.setStyleSheet("color: red;\n"
                                 "")
        self.btn_7.setObjectName("btn_7")
        self.gridLayout_3.addWidget(self.btn_7, 3, 0, 1, 1)
        self.btn_4 = QtWidgets.QPushButton(self.buton_alani)
        self.btn_4.setStyleSheet("color: red;\n"
                                 "")
        self.btn_4.setObjectName("btn_4")
        self.gridLayout_3.addWidget(self.btn_4, 2, 0, 1, 1)
        self.btn_5 = QtWidgets.QPushButton(self.buton_alani)
        self.btn_5.setStyleSheet("color: red;")
        self.btn_5.setObjectName("btn_5")
        self.gridLayout_3.addWidget(self.btn_5, 2, 1, 1, 1)
        self.btn_point = QtWidgets.QPushButton(self.buton_alani)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_point.sizePolicy().hasHeightForWidth())
        self.btn_point.setSizePolicy(sizePolicy)
        self.btn_point.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.btn_point.setFont(font)
        self.btn_point.setStyleSheet("color: red;")
        self.btn_point.setObjectName("btn_point")
        self.gridLayout_3.addWidget(self.btn_point, 4, 1, 1, 1)
        self.btn_8 = QtWidgets.QPushButton(self.buton_alani)
        self.btn_8.setStyleSheet("color: red;")
        self.btn_8.setObjectName("btn_8")
        self.gridLayout_3.addWidget(self.btn_8, 3, 1, 1, 1)
        self.btn_clear = QtWidgets.QPushButton(self.buton_alani)
        self.btn_clear.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_clear.sizePolicy().hasHeightForWidth())
        self.btn_clear.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.btn_clear.setFont(font)
        self.btn_clear.setStyleSheet("")
        self.btn_clear.setIconSize(QtCore.QSize(20, 20))
        self.btn_clear.setCheckable(False)
        self.btn_clear.setChecked(False)
        self.btn_clear.setAutoRepeat(False)
        self.btn_clear.setAutoRepeatDelay(300)
        self.btn_clear.setAutoRepeatInterval(100)
        self.btn_clear.setObjectName("btn_clear")
        self.gridLayout_3.addWidget(self.btn_clear, 5, 0, 1, 1)
        self.btn_square_root = QtWidgets.QPushButton(self.buton_alani)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btn_square_root.setFont(font)
        self.btn_square_root.setObjectName("btn_square_root")
        self.gridLayout_3.addWidget(self.btn_square_root, 5, 1, 1, 1)
        self.btn_exponentiation = QtWidgets.QPushButton(self.buton_alani)
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.btn_exponentiation.setFont(font)
        self.btn_exponentiation.setStyleSheet("color:green;")
        self.btn_exponentiation.setObjectName("btn_exponentiation")
        self.gridLayout_3.addWidget(self.btn_exponentiation, 5, 2, 1, 1)
        self.btn_past = QtWidgets.QPushButton(self.buton_alani)
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.btn_past.setFont(font)
        self.btn_past.setStyleSheet("color: blue;")
        self.btn_past.setObjectName("btn_past")
        self.gridLayout_3.addWidget(self.btn_past, 5, 3, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.buton_alani)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout_3.addWidget(self.pushButton, 0, 0, 1, 1)
        self.pushButton_2 = QtWidgets.QPushButton(self.buton_alani)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout_3.addWidget(self.pushButton_2, 0, 1, 1, 1)
        self.pushButton_3 = QtWidgets.QPushButton(self.buton_alani)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setStyleSheet("color: orange;\n"
                                        "")
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout_3.addWidget(self.pushButton_3, 0, 2, 1, 1)
        self.pushButton_4 = QtWidgets.QPushButton(self.buton_alani)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setStyleSheet("")
        self.pushButton_4.setCheckable(True)
        self.pushButton_4.setChecked(True)
        self.pushButton_4.setObjectName("pushButton_4")
        self.gridLayout_3.addWidget(self.pushButton_4, 0, 3, 1, 1)
        self.gridLayout.addWidget(self.buton_alani, 2, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Hesap Makinesi"))
        self.btn_plus.setText(_translate("MainWindow", "+"))
        self.btn_multiply.setText(_translate("MainWindow", "*"))
        self.btn_3.setText(_translate("MainWindow", "3"))
        self.btn_6.setText(_translate("MainWindow", "6"))
        self.btn_minus.setText(_translate("MainWindow", "-"))
        self.btn_divide.setText(_translate("MainWindow", "/"))
        self.btn_9.setText(_translate("MainWindow", "9"))
        self.btn_equals.setText(_translate("MainWindow", "="))
        self.btn_2.setText(_translate("MainWindow", "2"))
        self.btn_1.setText(_translate("MainWindow", "1"))
        self.btn_0.setText(_translate("MainWindow", "0"))  # Buton 0 olarak değiştirildi
        self.btn_7.setText(_translate("MainWindow", "7"))
        self.btn_4.setText(_translate("MainWindow", "4"))
        self.btn_5.setText(_translate("MainWindow", "5"))
        self.btn_point.setText(_translate("MainWindow", "."))
        self.btn_8.setText(_translate("MainWindow", "8"))
        self.btn_clear.setText(_translate("MainWindow", "00"))  # Buton 00 olarak değiştirildi
        self.btn_square_root.setText(_translate("MainWindow", "√"))
        self.btn_exponentiation.setText(_translate("MainWindow", "**"))  # Buton ** olarak değiştirildi
        self.btn_past.setText(_translate("MainWindow", "Geçmiş"))
        self.pushButton.setText(_translate("MainWindow", "n!"))
        self.pushButton_2.setText(_translate("MainWindow", "%"))
        self.pushButton_3.setText(_translate("MainWindow", "C"))
        self.pushButton_4.setText(_translate("MainWindow", "⌫"))  # Delete tuşu sembolü eklendi


class Calculator(QtWidgets.QMainWindow, Ui_MainWindow):
    def __init__(self, parent=None):
        super(Calculator, self).__init__(parent)
        self.setupUi(self)
        self.setWindowTitle("Gelişmiş Hesap Makinesi")
        self.history = []
        self.current_operation = ""
        self.is_new_number = True
        self.is_operator_pressed = False

        # Butonları bağlama
        self.btn_1.clicked.connect(lambda: self.click_event("1"))
        self.btn_2.clicked.connect(lambda: self.click_event("2"))
        self.btn_3.clicked.connect(lambda: self.click_event("3"))
        self.btn_4.clicked.connect(lambda: self.click_event("4"))
        self.btn_5.clicked.connect(lambda: self.click_event("5"))
        self.btn_6.clicked.connect(lambda: self.click_event("6"))
        self.btn_7.clicked.connect(lambda: self.click_event("7"))
        self.btn_8.clicked.connect(lambda: self.click_event("8"))
        self.btn_9.clicked.connect(lambda: self.click_event("9"))
        self.btn_0.clicked.connect(lambda: self.click_event("0"))
        self.btn_clear.clicked.connect(lambda: self.click_event("00"))  # 00 butonu
        self.btn_point.clicked.connect(lambda: self.click_event("."))

        self.btn_plus.clicked.connect(lambda: self.click_event("+"))
        self.btn_minus.clicked.connect(lambda: self.click_event("-"))
        self.btn_multiply.clicked.connect(lambda: self.click_event("*"))
        self.btn_divide.clicked.connect(lambda: self.click_event("/"))

        self.btn_equals.clicked.connect(lambda: self.click_event("="))
        self.pushButton_3.clicked.connect(lambda: self.click_event("C"))
        self.pushButton.clicked.connect(lambda: self.click_event("n!"))
        self.btn_square_root.clicked.connect(lambda: self.click_event("√"))
        self.btn_exponentiation.clicked.connect(lambda: self.click_event("**"))
        self.pushButton_2.clicked.connect(lambda: self.click_event("%"))
        self.pushButton_4.clicked.connect(lambda: self.click_event("⌫"))
        self.btn_past.clicked.connect(self.show_history)

        # UI'da görünen bazı buton metinlerini retranslateUi fonksiyonunda değiştirdim
        # Bu değişiklikler, `Hesap Makinesi` olarak isimlendirilen yeni bir pencerede daha net görünecektir.
        _translate = QtCore.QCoreApplication.translate
        self.btn_clear.setText(_translate("MainWindow", "00"))  # 00 butonu
        self.btn_equals.setText(_translate("MainWindow", "="))  # Eşittir butonu
        self.btn_exponentiation.setText(_translate("MainWindow", "**"))  # Üs alma butonu
        self.pushButton_3.setText(_translate("MainWindow", "C"))  # Clear butonu
        self.pushButton_4.setText(_translate("MainWindow", "⌫"))  # Geri alma butonu

    def click_event(self, button_text):
        giris_text = self.giris.text()

        # Sayı ve ondalık nokta işlemleri
        if button_text in "0123456789.":
            if self.is_new_number:
                self.giris.setText(button_text)
                self.is_new_number = False
            else:
                if button_text == "." and "." in giris_text:
                    pass
                else:
                    self.giris.setText(giris_text + button_text)

        # Operatör işlemleri
        elif button_text in "+-*/":
            if giris_text:
                if self.is_operator_pressed:
                    self.sonuc_ekrani.setText(self.sonuc_ekrani.toPlainText()[:-1] + button_text)
                else:
                    self.current_operation = self.sonuc_ekrani.toPlainText() + giris_text + button_text
                    self.sonuc_ekrani.setText(self.current_operation)
                    self.is_new_number = True
                    self.is_operator_pressed = True

        # Eşittir işlemi
        elif button_text == "=":
            if self.current_operation:
                try:
                    result = eval(self.current_operation + self.giris.text())
                    self.sonuc_ekrani.setText(self.current_operation + self.giris.text() + " = " + str(result))
                    self.giris.setText(str(result))
                    self.history.append(self.sonuc_ekrani.toPlainText())
                    self.current_operation = ""
                    self.is_new_number = True
                    self.is_operator_pressed = False
                except Exception as e:
                    self.giris.setText("Hata")
                    self.is_new_number = True

        # Temizleme işlemi
        elif button_text == "C":
            self.giris.clear()
            self.sonuc_ekrani.clear()
            self.current_operation = ""
            self.is_new_number = True
            self.is_operator_pressed = False

        # Faktöriyel işlemi
        elif button_text == "n!":
            if giris_text.isdigit():
                try:
                    num = int(giris_text)
                    result = math.factorial(num)
                    self.sonuc_ekrani.setText(f"{num}! = {result}")
                    self.giris.setText(str(result))
                    self.history.append(self.sonuc_ekrani.toPlainText())
                except Exception as e:
                    self.giris.setText("Hata")

        # Karekök işlemi
        elif button_text == "√":
            try:
                num = float(giris_text)
                if num >= 0:
                    result = math.sqrt(num)
                    self.sonuc_ekrani.setText(f"√{num} = {result}")
                    self.giris.setText(str(result))
                    self.history.append(self.sonuc_ekrani.toPlainText())
                else:
                    self.giris.setText("Hata")
            except ValueError:
                self.giris.setText("Hata")

        # Üs alma işlemi
        elif button_text == "**":
            if giris_text:
                if self.is_operator_pressed:
                    self.sonuc_ekrani.setText(self.sonuc_ekrani.toPlainText()[:-1] + "**")
                else:
                    self.current_operation = self.sonuc_ekrani.toPlainText() + giris_text + "**"
                    self.sonuc_ekrani.setText(self.current_operation)
                    self.is_new_number = True
                    self.is_operator_pressed = True
        # Yüzde işlemi
        elif button_text == "%":
            if giris_text:
                try:
                    num = float(giris_text)
                    result = num / 100
                    self.giris.setText(str(result))
                    self.sonuc_ekrani.setText(f"{num} % = {result}")
                    self.history.append(self.sonuc_ekrani.toPlainText())
                except ValueError:
                    self.giris.setText("Hata")

        # Geri alma (Delete) işlemi
        elif button_text == "⌫":
            self.giris.setText(giris_text[:-1])
            if not self.giris.text():
                self.is_new_number = True

    def show_history(self):
        history_text = "\n".join(self.history)
        msg_box = QtWidgets.QMessageBox()
        msg_box.setWindowTitle("Geçmiş")
        msg_box.setText("Yapılan İşlemler:")
        msg_box.setInformativeText(history_text)
        msg_box.exec_()
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    calc = Calculator()
    calc.show()
    sys.exit(app.exec_())